[{"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\index.js":"1","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\App.js":"2","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\reportWebVitals.js":"3","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\context\\ComponenteContext.js":"4","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Login.js":"5","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Dashboard.js":"6","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\Checkout.js":"7","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Error.js":"8","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Copyright.js":"9","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\DatosFiscales.js":"10","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\DatosPersonales.js":"11","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Obras.js":"12","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\DatosBancarios.js":"13","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Modal.js":"14","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\Resumen.js":"15","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\Botones.js":"16","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\validarDatos.js":"17","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\guardarLS.js":"18","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\PerfilAdmin.js":"19","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\DetalleObraAdmin.js":"20","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\ObrasCotizadasAdmin.js":"21","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\ListItemsAdmin.js":"22","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\CrearObraAdmin.js":"23","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\PerfilProv.js":"24","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\DetalleObraCotizadaProv.js":"25","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\ListItemsProv.js":"26","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\CotizarObraProv.js":"27","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\CardObra.js":"28","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\BuscadorObra.js":"29","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\TablaObrasAdmin.js":"30","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\DatosPrincipalesObrasAdmin.js":"31","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\FormularioRegistroObrasAdmin.js":"32","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\DatosPersonales.js":"33","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\TablaObraProv.js":"34","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\FormularioCotizarObraProv.js":"35","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\createPdf.js":"36","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\docdefinition.js":"37","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\createTable.js":"38","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\images\\logo.js":"39","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\asets\\img\\imagenes.js":"40"},{"size":592,"mtime":1611546932000,"results":"41","hashOfConfig":"42"},{"size":1030,"mtime":1611546932000,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1611546932000,"results":"44","hashOfConfig":"42"},{"size":1098,"mtime":1611546932000,"results":"45","hashOfConfig":"42"},{"size":7587,"mtime":1611607352276,"results":"46","hashOfConfig":"42"},{"size":15930,"mtime":1611598393285,"results":"47","hashOfConfig":"42"},{"size":10817,"mtime":1611609418867,"results":"48","hashOfConfig":"42"},{"size":171,"mtime":1611546932000,"results":"49","hashOfConfig":"42"},{"size":592,"mtime":1611565276504,"results":"50","hashOfConfig":"42"},{"size":8300,"mtime":1611607318315,"results":"51","hashOfConfig":"42"},{"size":4407,"mtime":1611607506522,"results":"52","hashOfConfig":"42"},{"size":3454,"mtime":1611546932000,"results":"53","hashOfConfig":"42"},{"size":2655,"mtime":1611607434857,"results":"54","hashOfConfig":"42"},{"size":952,"mtime":1611546932000,"results":"55","hashOfConfig":"42"},{"size":4058,"mtime":1611609249349,"results":"56","hashOfConfig":"42"},{"size":1180,"mtime":1611606976983,"results":"57","hashOfConfig":"42"},{"size":4096,"mtime":1611546932000,"results":"58","hashOfConfig":"42"},{"size":310,"mtime":1611546932000,"results":"59","hashOfConfig":"42"},{"size":151,"mtime":1611546932000,"results":"60","hashOfConfig":"42"},{"size":8392,"mtime":1611594944318,"results":"61","hashOfConfig":"42"},{"size":2173,"mtime":1611546932000,"results":"62","hashOfConfig":"42"},{"size":2925,"mtime":1611564039928,"results":"63","hashOfConfig":"42"},{"size":10042,"mtime":1611608743325,"results":"64","hashOfConfig":"42"},{"size":233,"mtime":1611546932000,"results":"65","hashOfConfig":"42"},{"size":398,"mtime":1611546932000,"results":"66","hashOfConfig":"42"},{"size":2645,"mtime":1611546932000,"results":"67","hashOfConfig":"42"},{"size":9587,"mtime":1611564642068,"results":"68","hashOfConfig":"42"},{"size":5534,"mtime":1611598652821,"results":"69","hashOfConfig":"42"},{"size":4100,"mtime":1611567239743,"results":"70","hashOfConfig":"42"},{"size":4197,"mtime":1611564116689,"results":"71","hashOfConfig":"42"},{"size":2400,"mtime":1611546932000,"results":"72","hashOfConfig":"42"},{"size":6777,"mtime":1611595023969,"results":"73","hashOfConfig":"42"},{"size":2739,"mtime":1611598735361,"results":"74","hashOfConfig":"42"},{"size":4195,"mtime":1611564938496,"results":"75","hashOfConfig":"42"},{"size":8073,"mtime":1611594798816,"results":"76","hashOfConfig":"42"},{"size":1241,"mtime":1611546932000,"results":"77","hashOfConfig":"42"},{"size":3154,"mtime":1611546932000,"results":"78","hashOfConfig":"42"},{"size":524,"mtime":1611546932000,"results":"79","hashOfConfig":"42"},{"size":8319,"mtime":1611546932000,"results":"80","hashOfConfig":"42"},{"size":138,"mtime":1611565253000,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"znppq8",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\index.js",[],["172","173"],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\App.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\reportWebVitals.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\context\\ComponenteContext.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Login.js",["174","175","176"],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Dashboard.js",["177","178","179","180","181","182"],"import { useState, useContext, useEffect } from 'react';\nimport clsx from 'clsx';\nimport jwt_decode from 'jwt-decode'\nimport axios from 'axios'\nimport { guardarLS } from '../libs/guardarLS'\nimport { makeStyles, Avatar, CssBaseline, Drawer, AppBar, Toolbar, List } from '@material-ui/core';\nimport { Typography, Divider, IconButton, Badge } from '@material-ui/core/';\nimport { Menu, ChevronLeft, ExitToApp } from '@material-ui/icons';\nimport imagenes from '../asets/img/imagenes';\n\nimport ListItemsAdmin from './admin/ListItemsAdmin';\nimport PerfilAdmin from './admin/PerfilAdmin'\nimport CrearObraAdmin from './admin/CrearObraAdmin'\n//import ObrasCreadasAdmin from './admin/ObrasCreadasAdmin'\nimport ObrasCotizadasAdmin from './admin/ObrasCotizadasAdmin'\nimport DetalleObraAdmin from './admin/DetalleObraAdmin'\n\nimport ListItemsProv from './prov/ListItemsProv'\nimport PerfilProv from './prov/PerfilProv'\n// import ObrasDisponiblesProv from './prov/ObrasDisponiblesProv'\n// import ObrasCotizadasProv from './prov/ObrasCotizadasProv'\nimport CotizarObraProv from './prov/CotizarObraProv'\nimport DetalleObraCotizadaProv from './prov/DetalleObraCotizadaProv'\n\nimport Obras from './Obras'\n\nimport {ComponenteContext} from '../context/ComponenteContext'\n\n//import {correoJwt} from '../funciones/decodificarJwt'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    background: '#f1f8e9',\n    \n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n    background: '#fff',\n    color: '#373737'\n  },\n\n  hr:{\n    background: 'linear-gradient(#d4e157, #afb42b)',\n    alignItems: 'center',\n    textAlign: 'center',\n    width: '50%',\n    borderColor:'#d4e157',\n    boxShadow:'2px 2px 5px #999',\n    height:'8px',\n    borderRadius: '5px',\n    marginTop:'1px'\n   },\n\n   toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 28px',\n    ...theme.mixins.toolbar,\n    \n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    background: '#cddc39',\n    color: 'black'\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n    \n  },\n  menuButtonHidden: {\n    display: 'none',\n    \n  },\n  title: {\n    flexGrow: 1,\n    margin: 'auto 0'\n    \n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing({drawerWidth}),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  \n  const resultado = JSON.parse(localStorage.getItem('jwt'))\n  const decoded = jwt_decode(resultado)\n  \n\n  const classes = useStyles();\n\n  const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\n\n  const { nivel_acceso, numero_componente } = componentecontx  \n\n  //const componente_ls = JSON.parse(localStorage.getItem('componente'))  \n  \n  // const [ componente, guardarComponente ] = useState({\n  //   nivel_acceso: componente_ls.nivel_acceso,\n  //   numero_componente: componente_ls.numero_componente\n  // })\n\n  // const { nivel_acceso, numero_componente } = componente\n\n  const [open, setOpen] = useState(true);\n  \n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  \n  const [ obrasdisponibles, guardarObrasDisponibles ] = useState([])\n  const [ obrascotizadas, guardarObrasCotizadas ] = useState([])\n  const [ obrastotales, guardarObrasTotales ] = useState([])\n  const [ rowsobrasdisponibles, guardarRowsObrasDisponibles ] = useState([])\n  const [ rowsobrascotizadas, guardarRowsObrasCotizadas ] = useState([])\n  const [ rowsobrastotales, guardarRowsObrasTotales ] = useState([])\n  const [ actualizarcards, guardarActualizarCards ] = useState(0)\n  const [ paginaactual, guardarPaginaActual ] = useState(0)\n  const [ page, setPage ] = useState(1);    \n  const [ cantidadcards, guardarCantidadCards ] = useState(12)\n  const [ paginafinal, guardarPaginaFinal ] = useState(cantidadcards)\n  const [ tipobusqueda, guardarTipoBusqueda ] = useState('Buscar por Folio Obra')\n  const [ perfil, guardarPerfil ] = useState({})\n\n  useEffect(() => {\n    \n    const consultarAPI = async () => {\n      if( nivel_acceso === 0){        \n        const respObrasTotales = await axios.get('https://apicotizacion.herokuapp.com/api/obras')\n        const obrasTotales = respObrasTotales.data.Obras.map(obra => (\n          {\n            folioObra: obra.folio_obra,\n            nombreObra: obra.nombre_obra                    \n          }\n        ))\n        guardarObrasTotales(respObrasTotales.data.Obras)\n        guardarRowsObrasTotales(obrasTotales)\n      }else if (nivel_acceso === 1){\n        const respObrasDisp = await axios.get('https://apicotizacion.herokuapp.com/api/obras/vigentes')\n        const respObrasCoti = await axios.get(`https://apicotizacion.herokuapp.com/api/cotizaciones/cotizadas/${decoded.correo}`)\n        const respPerfil = await axios.get(`https://apicotizacion.herokuapp.com/api/proveedores/datos_personales/${decoded.correo}`)\n        const obrasDisp = respObrasDisp.data.Obras.map(obra => (\n          {\n            folioObra: obra.folio_obra,\n            nombreObra: obra.nombre_obra                    \n          }\n        ))\n        const obrasCoti = respObrasCoti.data.Obras.map(obra => (\n          {\n            folioObra: obra.folio_obra,\n            folioCotizacion: obra.folio_cotizacion,\n            nombreObra: obra.nombre_obra,                   \n          }\n        ))\n        guardarObrasDisponibles(respObrasDisp.data.Obras)\n        guardarObrasCotizadas(respObrasCoti.data.Obras)\n        guardarRowsObrasDisponibles(obrasDisp)\n        guardarRowsObrasCotizadas(obrasCoti)\n        guardarPerfil(respPerfil.data.datos_personales)\n      }\n    }\n    consultarAPI()\n    //eslint-disable-next-line\n  }, [actualizarcards])\n  //const [ numerocomponentedashboardadmin, guardarNumeroComponenteDashboardAdmin ] = useState(0)\n  //const [ numerocomponentedashboardprov, guardarNumeroComponenteDashboardProv ] = useState(0)  \n  const [ obra, guardarObra ] = useState({})\n\n  const paginaAdmin = () => {\n    if (nivel_acceso === 0 && numero_componente === 0){\n      return <CrearObraAdmin\n        //guardarComponente={guardarComponente}\n        //componente={componente}\n        guardarActualizarCards={guardarActualizarCards}\n      />\n    }else if (nivel_acceso === 0 && numero_componente === 1){\n      return <PerfilAdmin\n        correo={decoded.correo}\n      />\n    }else if (nivel_acceso === 0 && numero_componente === 2){\n      return <Obras        \n      titulo={<h5>OBRAS CREADAS<hr className={classes.hr}/></h5>}\n        siguientecomponente={3}\n        guardarObra={guardarObra}\n        rows={rowsobrastotales}  \n        guardarRows={guardarRowsObrasTotales}      \n        obrastotal={obrastotales}     \n        totalpaginas={Math.ceil(rowsobrastotales.length/cantidadcards)} \n        paginaactual={paginaactual}  \n        guardarPaginaActual={guardarPaginaActual}\n        paginafinal={paginafinal}\n        guardarPaginaFinal={guardarPaginaFinal}\n        page={page}\n        setPage={setPage}\n        cantidadcards={cantidadcards}\n        bandObrasCotizadas={false}\n        tipobusqueda={tipobusqueda}\n        guardarTipoBusqueda={guardarTipoBusqueda}\n        seleccionpor={'obra'}\n      />\n    }else if (nivel_acceso === 0 && numero_componente === 3){\n      return <ObrasCotizadasAdmin\n        obra={obra}\n        guardarObra={guardarObra}\n        rowsobrascotizadas={rowsobrascotizadas}      \n        guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}        \n        obrascotizadas={obrascotizadas}\n        guardarObrasCotizadas={guardarObrasCotizadas}        \n        paginaactual={paginaactual}  \n        guardarPaginaActual={guardarPaginaActual}\n        paginafinal={paginafinal}\n        guardarPaginaFinal={guardarPaginaFinal}\n        page={page}\n        setPage={setPage}\n        cantidadcards={cantidadcards}\n        bandObrasCotizadas={true}\n        tipobusqueda={tipobusqueda}\n        guardarTipoBusqueda={guardarTipoBusqueda}\n      />\n    }else if (nivel_acceso === 0 && numero_componente === 4){\n      return <DetalleObraAdmin\n        obra={obra}\n      />\n      //return `La Obra es: ${obra.folio_obra} \\nLa cotizacion es: ${obra.folio_cotizacion}`\n    }else{\n      return 'error 400'\n    }\n    /*\n    switch (numerocomponentedashboardadmin){\n      case 0:\n        return <CrearObraAdmin\n          guardarNumeroComponenteDashboardAdmin={guardarNumeroComponenteDashboardAdmin}\n        />\n      case 1:\n        return <PerfilAdmin/>\n      case 2:\n        return <ObrasCreadasAdmin/>\n      default:\n        return 'error 400'\n    }\n    */\n  }\n\n  const paginaUsuario = () => {\n    if(nivel_acceso === 1 && numero_componente === 0){\n      return <Obras\n        // guardarComponente={guardarComponente}\n        // componente={componente}\n        titulo={<h5>OBRAS DISPONIBLES<hr className={classes.hr}/></h5>}\n        siguientecomponente={3}\n        guardarObra={guardarObra}\n        rows={rowsobrasdisponibles}  \n        guardarRows={guardarRowsObrasDisponibles}            \n        obrastotal={obrasdisponibles}\n        totalpaginas={Math.ceil(rowsobrasdisponibles.length/cantidadcards)}   \n        paginaactual={paginaactual}  \n        guardarPaginaActual={guardarPaginaActual}\n        paginafinal={paginafinal}\n        guardarPaginaFinal={guardarPaginaFinal}\n        page={page}\n        setPage={setPage}\n        cantidadcards={cantidadcards}\n        bandObrasCotizadas={false}\n        tipobusqueda={tipobusqueda}\n        guardarTipoBusqueda={guardarTipoBusqueda}\n        seleccionpor={'obra'}\n      />\n    }else if(nivel_acceso === 1 && numero_componente === 1){\n      return <PerfilProv\n        perfil={perfil}\n      />\n    }else if(nivel_acceso === 1 && numero_componente === 2){\n      //return <ObrasCotizadasProv/>      \n      return <Obras\n        // guardarComponente={guardarComponente}\n        // componente={componente}\n        titulo={<h5>OBRAS COTIZADAS<hr className={classes.hr}/></h5>}\n        siguientecomponente={4}\n        guardarObra={guardarObra}\n        rows={rowsobrascotizadas}      \n        guardarRows={guardarRowsObrasCotizadas}        \n        obrastotal={obrascotizadas}\n        totalpaginas={Math.ceil(rowsobrascotizadas.length/cantidadcards)} \n        paginaactual={paginaactual}  \n        guardarPaginaActual={guardarPaginaActual}\n        paginafinal={paginafinal}\n        guardarPaginaFinal={guardarPaginaFinal}\n        page={page}\n        setPage={setPage}\n        cantidadcards={cantidadcards}\n        bandObrasCotizadas={true}\n        tipobusqueda={tipobusqueda}\n        guardarTipoBusqueda={guardarTipoBusqueda}\n        seleccionpor={'obra'}\n      />\n    }else if(nivel_acceso === 1 && numero_componente === 3){\n      return <CotizarObraProv\n        // guardarComponente={guardarComponente}\n        // componente={componente}\n        obra={obra}\n        guardarActualizarCards={guardarActualizarCards}\n      />\n    }else if(nivel_acceso === 1 && numero_componente === 4){\n      return <DetalleObraCotizadaProv\n        obra={obra}\n      />\n    }\n    else{\n      return 'error 400'\n    }\n    /*\n    switch (numerocomponentedashboardprov) {\n      case 0:\n        return <ObrasDisponiblesProv\n          guardarNumeroComponenteDashboardProv={guardarNumeroComponenteDashboardProv}         \n          guardarObra={guardarObra}\n        />\n      case 1:\n        return <PerfilProv/>\n      case 2:\n        return <ObrasCotizadasProv/>\n      case 3:\n        return <CotizarObraProv\n          guardarNumeroComponenteDashboardProv={guardarNumeroComponenteDashboardProv}          \n          obra={obra}\n        />\n      default:\n        return 'error 400'\n    }\n    */\n  }\n\n  const salirlogin = () => {\n    //guardarLS(\"\", \"\", \"\")\n    localStorage.removeItem('jwt')\n    localStorage.removeItem('componente')\n    guardarComponenteContx({\n      nivel_acceso: null,\n      numero_ventana: 0,\n      numero_componente: null\n    })\n    /*const objeto = {\n      nivel_acceso: 0,\n      numero_componente: 0,\n      numero_ventana: 0\n    }\n    localStorage.setItem('componente', JSON.stringify(objeto))\n\n    guardarComponenteContx({\n      nivel_acceso: 0,\n      numero_ventana: 0,\n      numero_componente: 0\n    })\n    */\n\n    //guardarNumeroComponente(0)    \n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" align=\"center\" noWrap className={classes.title}>\n            {         \n              nivel_acceso === 0 ? 'ADMINISTRACIÓN' : 'PROVEEDOR'\n            }\n            \n          </Typography>          \n          <IconButton color=\"inherit\">\n            <Badge olor=\"secondary\">\n              <ExitToApp onClick={salirlogin} />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n       <div className={classes.toolbarIcon}>\n          <div>\n            <img style={{width: 160, right:'30%', marginRight:'5px'}} src={imagenes.imgjpg} />\n          </div>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeft />\n          </IconButton>\n        </div>\n        {\n          nivel_acceso === 0\n          ?\n          <ListItemsAdmin\n            guardarPaginaActual={guardarPaginaActual}\n            setPage={setPage}\n            guardarRowsObrasTotales={guardarRowsObrasTotales}\n            guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}     \n            obrastotales={obrastotales}            \n            guardarTipoBusqueda={guardarTipoBusqueda}\n          />\n          :\n          <ListItemsProv\n            guardarPaginaActual={guardarPaginaActual}\n            setPage={setPage}\n            obrasdisponibles={obrasdisponibles}\n            guardarRowsObrasDisponibles={guardarRowsObrasDisponibles}                  \n            obrascotizadas={obrascotizadas}\n            guardarRowsObrasCotizadas={guardarRowsObrasCotizadas}            \n            guardarTipoBusqueda={guardarTipoBusqueda}\n          />\n        }\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />        \n            {\n              nivel_acceso === 0 ? paginaAdmin() : paginaUsuario()\n            }\n      </main>\n    </div>\n  );\n}","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\Checkout.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Error.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Copyright.js",["183"],"import { Link, Typography } from '@material-ui/core';\nimport imagenes from '../asets/img/imagenes';\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            <div>\n            <img style={{width: 140}} src={imagenes.imgjpg} />\n          </div>\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"http://www.localhost:3000/\">\n                Pavimentos Laguna SA de CV\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    )\n}\n\nexport default Copyright;","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\DatosFiscales.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\DatosPersonales.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Obras.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\DatosBancarios.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\Modal.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\Resumen.js",["184","185"],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\registro\\Botones.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\validarDatos.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\guardarLS.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\PerfilAdmin.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\DetalleObraAdmin.js",["186","187","188"],"import { useState, Fragment, useEffect } from 'react';\nimport { makeStyles, Grid, Button, CssBaseline, Typography, Checkbox, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@material-ui/core/';\nimport Copyright from '../Copyright'\n\nconst useStyles = makeStyles((theme) => ({ \n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        },\n        paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n        },\n        btnregistrar: {\n            float: 'right',\n            background: 'linear-gradient(#d4e157, #b3d233)',\n            color:'#424242',\n    \n            '&:hover': {\n                color:'#fff',\n                fontWeight: '800',\n            }\n    \n    \n        },\n        rb1:{\n            alignItems: 'center',\n            textAlign: 'center'\n           },\n           hr:{\n            background: 'linear-gradient(#d4e157, #afb42b)',\n            alignItems: 'center',\n            textAlign: 'center',\n            width: '50%',\n            borderColor:'#d4e157',\n            boxShadow:'2px 2px 5px #999',\n            height:'8px',\n            borderRadius: '5px',\n            marginTop:'1px',\n            alignItems: 'center',\n            textAlign: 'center'\n           }, \n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 440,\n    },\n    btn:{\n        background: 'linear-gradient(#ff616f, #ab000d)',\n        border: 3,\n        borderRadius: 6,\n        color: 'white',\n        height: 30,\n        width: '50%',\n        cursor: 'pointer',\n    \n        '&:hover': {\n          background: 'linear-gradient(#ab000d, #ff616f)',\n          color: 'white',\n          fontWeight: '700',\n          \n        },\n    },\n}));\n\nexport default function DetalleObraAdmin({ obra }) {\n\n  const columns = [\n    { id: 'folioItem', label: 'Folio Item', minWidth: 100 },\n    { id: 'categoria', label: 'Categoria', minWidth: 100 },\n    {\n      id: 'subcategoria',\n      label: 'Sub Categoria',\n      minWidth: 100,\n      align: 'right',\n      format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n      id: 'producto',\n      label: 'Producto',\n      minWidth: 170,\n      align: 'right',\n      format: (value) => value.toLocaleString('en-US'),\n    },\n    {\n      id: 'unidad',\n      label: 'Unidad',\n      minWidth: 100,\n      align: 'right',\n      format: (value) => value.toFixed(2),\n    },\n    {\n      id: 'requeridos',\n      label: 'Requeridos',\n      minWidth: 170,\n      align: 'right',\n      format: (value) => value.toFixed(2),\n    },\n    {\n      id: 'anotaciones',\n      label: 'Anotaciones',\n      minWidth: 170,\n      align: 'right',\n      format: (value) => value.toFixed(2),\n    },\n    {\n      id: 'seleccionar',\n      label: 'seleccionar',\n      minWidth: 170,\n      align: 'right',\n      format: (value) => value.toFixed(2),\n    }\n  ]\n\n\n    const classes = useStyles()\n\n    const [ page, setPage ] = useState(0)\n    const [ rowsPerPage, setRowsPerPage ] = useState(10)\n    const [ rows, guardarRows ] = useState(obra.materiales_cotizacion)\n    const [ checks, guardarChecks ] = useState({})\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\n \n    useEffect(() => {\n        const objeto = {}\n        obra.materiales_cotizacion.map(e => (objeto[e.folioItem] = false))\n        guardarChecks(objeto)\n        //eslint-disable-next-line\n    }, [])\n\n  \n    useEffect(() => {\n        let band = false\n        for (const property in checks) {\n            if(checks[property]){\n                band = true\n                break\n            }\n        }        \n        if(band === true){\n            guardarBandBotonRegistrar(false)\n        }else{\n            guardarBandBotonRegistrar(true)\n        }\n\n    }, [checks])\n\n    const registrar = () => {\n        \n    }\n  \n\n    const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n    };\n\n  const seleccionarFolio = e => {\n    //const dato_eliminado = rows.filter(row => row.folioItem !== e.target.id)\n    //guardarRows([...dato_eliminado])    \n    guardarChecks({\n        ...checks,\n        [e.target.id]: e.target.checked\n    })\n  }\n\n  return (\n    <Fragment>\n        <CssBaseline />      \n        <main className={classes.layout}>\n            <Paper className={classes.paper}>\n\n            <Typography align=\"center\">\n                    <h3 className={classes.rb1} >REQUISICIÓN DE OBRAS<hr className={classes.hr}/></h3> \n                    </Typography>\n                <br/>\n                <Paper className={classes.root}>\n                    <TableContainer  className={classes.container}>\n                        <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                    ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody >\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                    return (\n                                    <TableRow  hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                        {columns.map((column) => {\n                                        const value = row[column.id]\n                                        return (\n                                            <TableCell key={column.id} align={column.align}>\n                                            {\n                                                column.id === 'seleccionar'\n                                            ?\n                                            <Checkbox\n                                                checked={checks[row.folioItem]}\n                                                id={row.folioItem}\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={seleccionarFolio}\n                                            /> : value }\n                                            </TableCell>\n                                        );\n                                        })}\n                                    </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </Paper>\n                <br/>\n                <Grid container justify=\"flex-end\" spacing={3}>\n                    <Grid item xs={3}>\n                        <Button \n                            className={classes.btnregistrar}\n                            disabled={bandbotonregistrar}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={registrar}\n                            dir=\"rtl\"\n                        >Registrar</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <Copyright />\n        </main>\n    </Fragment>\n    \n  );\n}\n\n\n/*\n\n\n*/","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\ObrasCotizadasAdmin.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\ListItemsAdmin.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\CrearObraAdmin.js",["189","190","191"],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\PerfilProv.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\DetalleObraCotizadaProv.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\ListItemsProv.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\CotizarObraProv.js",["192","193","194"],"import { Fragment, useState, useEffect, useContext } from 'react';\nimport { makeStyles, CssBaseline, Paper, Button, Typography, Grid } from '@material-ui/core';\nimport Axios from 'axios'\nimport jwt_decode from 'jwt-decode'\nimport Copyright from '../Copyright'\nimport TablaObraProv from './TablaObraProv'\nimport Error from '../Error'\nimport Modal from '../Modal'\nimport FormularioCotizarObraProv from './FormularioCotizarObraProv'\nimport {ComponenteContext} from '../../context/ComponenteContext'\n\n\nconst useStyles = makeStyles((theme) => ({\n  \n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      /*\n      [theme.breakpoints.up(1000 + theme.spacing(2) * 2)]: {    \n        width: 1000,    \n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      */\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n    },\n    btnregistrar: {\n        float: 'right',\n        background: 'linear-gradient(#d4e157, #b3d233)',\n        color:'#424242',\n\n        '&:hover': {\n            color:'#000',\n            fontWeight: '700',\n        }\n\n\n    },\n    rb1:{\n        alignItems: 'center',\n        textAlign: 'center'\n       },\n       hr:{\n        background: 'linear-gradient(#d4e157, #afb42b)',\n        alignItems: 'center',\n        textAlign: 'center',\n        width: '50%',\n        borderColor:'#d4e157',\n        boxShadow:'2px 2px 5px #999',\n        height:'8px',\n        borderRadius: '5px',\n        marginTop:'1px',\n        alignItems: 'center',\n        textAlign: 'center'\n       },\n}));\n\n\nconst CotizarObraProv = ( { obra, guardarActualizarCards } ) => {\n    const classes = useStyles();\n\n    const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\n                \n    // Creacion de states\n    const [ error, guardarError ] = useState({\n        bandError: false,\n        mensajeError: ''\n    })\n    const [ categorias, guardarCategorias] = useState([])\n    const [ subcategorias, guardarSubCategorias ] = useState([])\n    const [ productos, guardarProductos ] = useState([])\n    const [ datos, guardarDatos ] = useState({        \n        folioItem: '',\n        categoria: '',\n        subcategoria: '',\n        producto: '',\n        unidad: '',\n        requeridos: 0,\n        preciounitario: '',\n        anotaciones: '',\n        sostenimiento: 1,\n        condiciones: '',\n        eliminar: ''\n    })\n    const [ rows, guardarRows ] = useState([])\n    const [ banddatosapi, guardarBandDatosApi ] = useState(false)\n    const [openmodal, setOpenModal] = useState(false)\n    const [ bandbotonregistrar, guardarBandBotonRegistrar ] = useState(true)\n    \n    // Destructuring de los state\n    const { categoria, subcategoria, producto, sostenimiento, condiciones } = datos\n    const { bandError, mensajeError } = error\n\n\n    useEffect(() => {     \n        \n        const consultarAPI = async () => {                \n            const res = [...new Set(obra.materiales_obra.map(e => (e.categoria)))]            \n            guardarCategorias(res)\n        }\n        consultarAPI()\n        //eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        if(rows.length === 0){\n            guardarBandBotonRegistrar(true)\n        }\n    }, [rows])\n\n    useEffect(() => {   \n        try{\n            const resultado = obra.materiales_obra.filter(e => e.categoria === categoria) \n            guardarSubCategorias([...new Set(resultado.map(e => (e.subcategoria)))]) \n            guardarDatos({\n                ...datos,\n                folioItem: '',\n                subcategoria: '',\n                producto: '',\n                unidad: '',\n                requeridos: 0,\n                preciounitario: '',\n                anotaciones: '',\n                eliminar: ''\n            })        \n        }catch{}\n        //eslint-disable-next-line\n    }, [categoria])\n\n    useEffect(() => {\n        try{\n            const resultado = obra.materiales_obra.filter(e => e.subcategoria === subcategoria)        \n            guardarProductos([...new Set(resultado.map(e => (e.producto)))]) \n            guardarDatos({\n                ...datos,\n                folioItem: '',\n                producto: '',\n                unidad: '',\n                requeridos: 0,\n                preciounitario: '',\n                anotaciones: '',\n                eliminar: ''\n            })\n        }catch{}\n        //eslint-disable-next-line\n    }, [subcategoria])\n\n    useEffect(() => {\n        try{\n            const resultado = obra.materiales_obra.filter(e => e.producto === producto)\n                \n            resultado.map(e => (guardarDatos({\n                ...datos,\n                folioItem: e.folioItem,\n                unidad: e.unidad,\n                requeridos: e.requeridos\n                })))\n        }catch{}\n        //eslint-disable-next-line\n    }, [producto])\n\n    useEffect(() => {\n        const consultarAPI = async () => {\n            try{\n                \n\n                let materiales = rows\n                materiales.map(material => delete material.eliminar);\n\n\n                const resultado = JSON.parse(localStorage.getItem('jwt'))\n                const decoded = jwt_decode(resultado);        \n                \n                let resultadoAPI = await Axios.post('https://apicotizacion.herokuapp.com/api/cotizaciones', {                    \n                    \"nombre_obra\": obra.nombre_obra,\n                    \"folio_obra\": obra.folio_obra,\n                    \"folio_cotizacion\": Math.floor(Math.random() * 10000) + 1,\n                    \"correo_prov\": decoded.correo,\n                    'dias_sostenimiento_propuesta': sostenimiento,\n                    'condiciones_comerciales': condiciones,\n                    \"materiales_cotizacion\": materiales                    \n                })\n                //guardarNumeroComponenteDashboardProv(2)\n                guardarActualizarCards(Math.floor(Math.random() * 500) + 1)\n                guardarComponenteContx({\n                    ...componentecontx,\n                    numero_componente: 2\n                })\n                \n                /*\n\n\n\n                guardarComponente({\n                    ...componente,\n                    numero_componente: 2\n                })\n\n\n\n                */\n            }catch(err){\n                guardarBandDatosApi(false)\n                alert(\"La obra ya ha sido registrada\")\n            }\n        }\n\n        if(banddatosapi && rows.length > 0){\n            consultarAPI()\n        }\n        //eslint-disable-next-line\n    }, [banddatosapi])\n\n    const registrar = () => {\n        if(condiciones.trim() === ''){\n            guardarError({ bandError: true, mensajeError: 'Todos los campos son obligadorios' })\n            return\n        }\n        if(sostenimiento < 1){\n            guardarError({ bandError: true, mensajeError: 'Los días de sostenimiento deben ser mayor a 0' })\n            return\n        }\n        guardarError({ bandError: false, mensajeError: '' })\n        setOpenModal(true)\n    }\n\n    return ( \n        <Fragment>\n            <CssBaseline />      \n            <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                <Typography align=\"center\">\n                    <h3 className={classes.rb1} >COTIZACIÓN DE OBRA<hr className={classes.hr}/></h3> \n                    </Typography>\n                    <br/>\n                    <br/>\n                    { bandError ? <Error mensaje={mensajeError}/> : null }                    \n                    <FormularioCotizarObraProv\n                        datos={datos}\n                        guardarDatos={guardarDatos}\n                        guardarError={guardarError}\n                        rows={rows}\n                        guardarRows={guardarRows}\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\n                        categorias={categorias}\n                        subcategorias={subcategorias}\n                        productos={productos}\n                        classes={classes}\n                    />\n                    <br/>\n                    <br/>\n                    <br/> \n                    <TablaObraProv\n                        rows={rows}\n                        guardarRows={guardarRows}\n                        guardarBandBotonRegistrar={guardarBandBotonRegistrar}\n                    />\n                    <br/>\n                    <Grid container justify=\"flex-end\" spacing={3}>\n                        <Grid item xs={3}>\n                            <Button \n                                className={classes.btnregistrar}\n                                disabled={bandbotonregistrar}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={registrar}\n                                dir=\"rtl\"\n                            >Registrar</Button>\n                        </Grid>\n                    </Grid>\n                    <Modal\n                        openmodal={openmodal}\n                        setOpenModal={setOpenModal}\n                        guardarBandDatosApi={guardarBandDatosApi}\n                    />\n                </Paper>\n                <Copyright />\n            </main>\n        </Fragment>\n     )\n}\n \nexport default CotizarObraProv;","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\CardObra.js",["195","196"],"import { Fragment, useContext } from 'react';\nimport { Card, Container, CardActions, CardContent, Grid, Typography, makeStyles }  from '@material-ui/core/';\nimport {Pagination} from '@material-ui/lab/';\nimport {ComponenteContext} from '../context/ComponenteContext'\nimport {createPDF} from '../libs/createPdf'\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    background:'#f5f5f5',\n    borderRadius: 10,\n  },\n\n  \n  card: {\n    \n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    background: '#fff',\n    margin: '0 12px auto',\n    boxShadow:'#f0f4c3 0px 0px 0px 1px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;',\n    transition: 'transform .2s',\n\n    '&:hover': {\n      transition: theme.transitions.create('transform','background','transition', {\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      transition: 'transform .5s',\n      transform: 'scale(1.1)',\n      color: 'black'\n      \n   },\n\n  },\n  cardContent: {\n    flexGrow: 1,\n    \n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n\n  num:{\n    background:'#f0f4c3'\n  },\n\n  btn:{\n    background: 'linear-gradient(#cfcfcf, #fff)',\n    border: 0,\n    borderRadius: 6,\n    color: 'black',\n    height: 30,\n    width: '100%',\n    cursor: 'pointer',\n    fontWeight: 600,\n    boxShadow:'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\n\n\n    '&:hover': {\n      transition: theme.transitions.create('transition','background', {\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n        transition: 'all 0.1s ease',\n        background: 'linear-gradient(#d4e157,#B3D233)',\n        color:'black'\n     },\n  },\n}));\n\n\n\nconst CardObra = ({siguientecomponente, rows, cantidadcards, totalpaginas, paginaactual, paginafinal, guardarPaginaFinal, page, setPage, guardarPaginaActual, obrastotal, obrascotizadas, guardarObra, bandObrasCotizadas, seleccionpor }) => {\n\n\n    const classes = useStyles();\n        \n    \n    \n    const { componentecontx, guardarComponenteContx } = useContext(ComponenteContext)\n\n    const { nivel_acceso } = componentecontx\n\n    const handleChange = (event, value) => {\n      setPage(value);    \n      guardarPaginaActual((cantidadcards*value)-cantidadcards)   \n      guardarPaginaFinal(cantidadcards*value) \n    };\n\n    const seleccionarObra = e => {      \n      if(nivel_acceso === 1 && siguientecomponente === 4 ){\n        createPDF()\n      }else{\n        let obraSeleccionada = []        \n      \n        if (seleccionpor === \"obra\" ){\n          obraSeleccionada = obrastotal.filter(row => row.folio_obra === e.target.id)\n        }else{          \n          obraSeleccionada = obrastotal.filter(row => row.folio_cotizacion === e.target.id)\n        }\n        const obra = obraSeleccionada[0]        \n        \n        guardarObra(obra)\n        guardarComponenteContx({\n          ...componentecontx,\n          numero_componente: siguientecomponente\n        })\n      }\n        \n        /*\n\n\n\n        guardarComponente({\n          ...componente,\n          numero_componente: 3\n        })\n\n\n\n        */\n    }\n\n    return (\n        <Fragment>    \n        <main>        \n            <Container className={classes.cardGrid} maxWidth=\"md\">\n            {/* End hero unit */}\n            <Grid container spacing={2}>\n                {rows.slice(paginaactual, paginafinal).map((row) => (\n                <Grid item key={bandObrasCotizadas ? row.folioCotizacion:row.folioObra} xs={12} sm={6} md={4}>\n                    <Card className={classes.card}>                  \n                    <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          Folio Obra: {row.folioObra}\n                        </Typography>\n                        {\n                          bandObrasCotizadas\n                          ?\n                          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            Folio Cotizacion: {row.folioCotizacion}\n                          </Typography>\n                          :\n                          null\n                        }\n                        <Typography>\n                        {row.nombreObra}\n                        </Typography>\n\n                        </CardContent>\n                        <CardActions>\n                        <input\n                            type='button'\n                            id={ seleccionpor === \"obra\" ? row.folioObra : row.folioCotizacion}\n                            value=\"Seleccionar\"\n                            onClick={seleccionarObra}\n                            className={classes.btn}\n                        />\n                    </CardActions>\n                    </Card>\n                </Grid>\n                ))}\n            </Grid>\n            \n\n            </Container>\n            <Grid\n              \n               container\n               spacing={0}\n               direction=\"column\"\n               alignItems=\"center\"\n               justify=\"center\"\n            >\n              <div className={classes.root}>\n                <Pagination count={totalpaginas} page={page} onChange={handleChange} />\n              </div>\n            </Grid>\n        </main>\n        </Fragment>\n    );\n}\n\nexport default CardObra","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\BuscadorObra.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\TablaObrasAdmin.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\DatosPrincipalesObrasAdmin.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\admin\\FormularioRegistroObrasAdmin.js",["197"],"import {Button, InputLabel, Select, MenuItem, Grid, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons/'\nimport { styled } from '@material-ui/core/styles';\n\n\n\nconst ButtonComponent = styled('button')({\n    height: '100%',\n    width: '100%',\n    background: 'linear-gradient(#d4e157, #b3d233)',\n    color:'#000',\n    fontWeight: '700',\n    borderColor:'#d4e157',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize:'15px',\n\n    '&:hover': {\n        background: 'linear-gradient(#b3d233, #d4e157)',\n    }\n});\n\nconst FormularioRegistroObras = ({ datos, guardarDatos, guardarError, rows, guardarRows, guardarBandBotonRegistrar, categorias, subcategorias, productos, classes }) => {\n\n    const { folioItem, categoria, subcategoria, producto, unidad, requeridos, anotaciones } = datos\n\n    const submitTabla = e => {\n        e.preventDefault()\n        \n        if (folioItem.trim() === '' || unidad.trim() === '' || anotaciones.trim() === ''){\n            guardarError({ bandError: true, mensajeError: 'Todos los campos son obligadorios' })\n            return\n        }    \n        if (requeridos < 1){\n            guardarError({ bandError: true, mensajeError: 'EL número requeridos deben ser mayor a 1' })\n            return\n        }      \n\n        const result = rows.find(row => row.folioItem === folioItem)        \n\n        if (result){            \n            guardarError({ bandError: true, mensajeError: 'El folio ya ha sido ingresado' })\n            return\n        }\n        \n        guardarError({ bandError: false, mensajeError: '' })\n        guardarRows([...rows, datos])\n        guardarDatos({\n            folioItem: '',\n            categoria: '',\n            subcategoria: '',\n            producto: '',\n            unidad: '',\n            requeridos: 0,\n            anotaciones: '',\n            eliminar: ''\n        })\n        guardarBandBotonRegistrar(false)\n    }\n\n    const handleChange = e => {\n        if (e.target.name === 'requeridos'){\n            guardarDatos({\n                ...datos,\n                [e.target.name]: parseInt(e.target.value)\n            })       \n        }else{        \n            guardarDatos({\n                ...datos,\n                [e.target.name]: e.target.value\n            })       \n        }\n         \n    }  \n\n    return ( \n        <form\n            onSubmit={submitTabla}\n        >\n            <Grid container spacing={3}>                \n                <Grid item xs={12} md={3}>\n                    <TextField                                              \n                        disabled          \n                        id=\"folioItem\"\n                        name=\"folioItem\"\n                        label=\"Folio Item\"\n                        value={folioItem}\n                        onChange={handleChange}         \n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12} md={3}>                        \n                    <InputLabel id=\"categoria\">Categoría</InputLabel>\n                    <Select\n                        required\n                        id=\"categoria\"\n                        name='categoria'\n                        value={categoria}\n                        onChange={handleChange}\n                        fullWidth\n                    >\n                        {\n                            categorias.map(item => <MenuItem value={item}>{item}</MenuItem>)\n                        }\n                    </Select>                       \n                </Grid>\n                <Grid item xs={12} md={3}>                        \n                    <InputLabel id=\"subcategoria\">Sub Categoría</InputLabel>\n                    <Select\n                        required\n                        id=\"subcategoria\"\n                        name='subcategoria'\n                        value={subcategoria}\n                        onChange={handleChange}\n                        fullWidth\n                    >\n                        {\n                            subcategorias.map(item => <MenuItem value={item}>{item}</MenuItem>)\n                        }\n                    </Select>                       \n                </Grid>\n                <Grid item xs={12} md={3}>                        \n                    <InputLabel id=\"producto\">Producto</InputLabel>\n                    <Select\n                        required\n                        id=\"producto\"\n                        name='producto'\n                        value={producto}\n                        onChange={handleChange}\n                        fullWidth\n                    >\n                        {\n                            productos.map(item => <MenuItem value={item}>{item}</MenuItem>)\n                        }                                    \n                    </Select>                       \n                </Grid>\n            </Grid>\n            <Grid container spacing={3}>                        \n                <Grid item xs={12} md={3}>\n                    <TextField                                    \n                        id=\"unidad\"\n                        name=\"unidad\"\n                        label=\"Unidad\"\n                        disabled\n                        value={unidad}\n                        onChange={handleChange}\n                        fullWidth                                    \n                    />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <TextField\n                        required\n                        id=\"requeridos\"\n                        name=\"requeridos\"\n                        label=\"Requeridos\"\n                        value={requeridos}\n                        onChange={handleChange}\n                        type='number'\n                        fullWidth                                    \n                    />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <TextField\n                        required\n                        id=\"anotaciones\"\n                        name=\"anotaciones\"\n                        label=\"Anotaciones\"\n                        value={anotaciones}\n                        onChange={handleChange}\n                        fullWidth                                    \n                    />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                <ButtonComponent\n                    className={classes.btn}\n                    type='submit'\n                    fullWidth\n                    startIcon={<Add />}\n                    >\n                        AÑADIR\n                    </ButtonComponent>\n                </Grid>\n            </Grid>\n        </form>\n     );\n}\n \nexport default FormularioRegistroObras;","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\DatosPersonales.js",["198","199"],"import { Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles,} from '@material-ui/core/'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n    overflow: '2',\n    \n  },\n  paper: {\n    marginTop: '50px',\n    maxWidth: 650,\n    margin: `${theme.spacing(1)}px auto`,\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(8),\n    paddingRight: theme.spacing(8),\n    background: 'white',\n    borderRadius: '10px 10px 10px 10px',\n  },\n\n\n  rb1:{\n    alignItems: 'center',\n    textAlign: 'center'\n   },\n   hr:{\n    background: 'linear-gradient(#d4e157, #afb42b)',\n    alignItems: 'center',\n    textAlign: 'center',\n    width: '50%',\n    borderColor:'#d4e157',\n    boxShadow:'2px 2px 5px #999',\n    height:'8px',\n    borderRadius: '5px',\n    marginTop:'1px',\n    alignItems: 'center',\n    textAlign: 'center'\n   },\n\n}));\n\nexport default function DatosPersonales({perfil}) {\n  const classes = useStyles();\n\n  const { correo_prov, nombre_contacto_prov, telefono_fijo_prov, telefono_movil_prov } = perfil  \n\n  \n\n  return (\n    <div className={classes.paper}>\n    <Fragment>\n    <Typography>\n      <h3 className={classes.rb1} >DATOS PERSONALES <hr className={classes.hr}/></h3> \n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled = {true}\n            id=\"correo_prov\"\n            name=\"correo_prov\"\n            label=\"Correo\"\n            value={''+correo_prov}\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled = {true}\n            id=\"nombre_contacto_prov\"\n            name=\"nombre_contacto_prov\"\n            label=\"Nombre contacto\"\n            value={''+nombre_contacto_prov}\n            fullWidth\n            \n          />\n        </Grid>\n        <Grid item xs={12}  sm={6}>\n          <TextField\n            disabled = {true}\n            id=\"telefono_fijo_prov\"\n            name=\"telefono_fijo_prov\"\n            label=\"Telefono fijo\"\n            value={''+telefono_fijo_prov}\n            fullWidth\n           \n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled = {true}\n            id=\"telefono_movil_prov\"\n            name=\"telefono_movil_prov\"\n            label=\"Telefono celular\"\n            value={''+telefono_movil_prov}\n            fullWidth           \n          />\n        </Grid>\n        \n      </Grid>\n      \n\n    </Fragment>\n    </div>\n  );\n}\n","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\TablaObraProv.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\components\\prov\\FormularioCotizarObraProv.js",["200","201"],"import React, { Fragment } from 'react';\nimport {Button, InputLabel, Select, MenuItem, Grid, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons/'\nimport { styled } from '@material-ui/core/styles';\n\nconst ButtonComponent = styled('button')({\n    height: '100%',\n    width: '100%',\n    background: 'linear-gradient(#d4e157, #b3d233)',\n    color:'#000',\n    fontWeight: '700',\n    borderColor:'#d4e157',\n    borderRadius: '5px',\n    cursor: 'Pointer',\n    fontSize:'15px',\n\n    '&:hover': {\n        background: 'linear-gradient(#b3d233, #d4e157)',\n    }\n});\n\nconst FormularioCotizarObraProv = ({ guardarBandBotonRegistrar, guardarRows, rows, guardarError, categorias, subcategorias, productos, datos, guardarDatos, classes}) => {\n\n    const { folioItem, categoria, subcategoria, producto, unidad, preciounitario, requeridos, anotaciones, sostenimiento, condiciones } = datos\n\n    const handleChange = e => {\n               \n        guardarDatos({\n            ...datos,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const submitTabla = e => {\n        e.preventDefault()\n\n        if (producto.trim() === '' || preciounitario.trim() === '' || anotaciones.trim() === '' || unidad.trim() === ''){\n            guardarError({ bandError: true, mensajeError: 'Todos los campos son obligadorios' })\n            return\n        }\n\n        const result = rows.find(row => row.folioItem === folioItem)        \n\n        if (result){            \n            guardarError({ bandError: true, mensajeError: 'El producto ya ha sido ingresado' })\n            return\n        }\n\n        guardarError({ bandError: false, mensajeError: '' })\n\n        guardarRows([...rows, datos])\n        guardarDatos({\n            ...datos,\n            folioItem: '',\n            categoria: '',\n            subcategoria: '',\n            producto: '',\n            unidad: '',\n            requeridos: 0,\n            anotaciones: '',\n            eliminar: ''\n        })\n        guardarBandBotonRegistrar(false)\n    }\n    return (        \n        <Fragment>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={3}>\n                    <TextField\n                        id=\"sostenimiento\"\n                        name=\"sostenimiento\"\n                        label=\"Días de sostenimiento\"                        \n                        value={sostenimiento}\n                        onChange={handleChange}\n                        type='number'\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <TextField                                    \n                        id=\"condiciones\"\n                        name=\"condiciones\"\n                        label=\"Condiciones\"                        \n                        value={condiciones}\n                        onChange={handleChange}\n                        fullWidth                                    \n                    />\n                </Grid>\n            </Grid>\n            <form\n                onSubmit={submitTabla}\n            >                \n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Grid container spacing={3}>                                \n                    <Grid item xs={12} md={3}>                        \n                        <InputLabel id=\"categoria\">Categoría</InputLabel>\n                        <Select\n                            required\n                            id=\"categoria\"\n                            name='categoria'\n                            value={categoria}\n                            onChange={handleChange}\n                            fullWidth\n                        >\n                            {\n                                categorias.map(item => <MenuItem key={item} value={item}>{item}</MenuItem>)\n                            }\n                        </Select>                       \n                    </Grid>\n                    <Grid item xs={12} md={3}>                        \n                        <InputLabel id=\"subcategoria\">Sub Categoría</InputLabel>\n                        <Select\n                            required\n                            id=\"subcategoria\"\n                            name='subcategoria'\n                            value={subcategoria}\n                            onChange={handleChange}\n                            fullWidth\n                        >\n                            {\n                                subcategorias.map(item => <MenuItem key={item} value={item}>{item}</MenuItem>)\n                            }\n                        </Select>                       \n                    </Grid>\n                    <Grid item xs={12} md={3}>                        \n                        <InputLabel id=\"producto\">Producto</InputLabel>\n                        <Select\n                            required\n                            id=\"producto\"\n                            name='producto'\n                            value={producto}\n                            onChange={handleChange}\n                            fullWidth\n                        >\n                            {\n                                productos.map(item => <MenuItem key={item} value={item}>{item}</MenuItem>)\n                            }                                    \n                        </Select>                       \n                    </Grid>\n                    <Grid item xs={12} md={3}>\n                        <TextField                                    \n                            id=\"unidad\"\n                            name=\"unidad\"\n                            label=\"Unidad\"\n                            disabled\n                            value={unidad}\n                            onChange={handleChange}\n                            fullWidth                                    \n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={3}>\n                        <TextField\n                            disabled\n                            id=\"requeridos\"\n                            name=\"requeridos\"\n                            label=\"Requeridos\"\n                            value={requeridos}\n                            onChange={handleChange}                        \n                            fullWidth                                    \n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3}>\n                        <TextField     \n                            required                               \n                            id=\"preciounitario\"\n                            name=\"preciounitario\"\n                            label=\"Precio Unitario\"\n                            value={preciounitario}\n                            onChange={handleChange}\n                            fullWidth                                    \n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3}>\n                        <TextField\n                            required\n                            id=\"anotaciones\"\n                            name=\"anotaciones\"\n                            label=\"Anotaciones\"\n                            value={anotaciones}\n                            onChange={handleChange}\n                            fullWidth                                    \n                        />\n                    </Grid>\n                    <Grid item xs={12} md={3}>\n                    <ButtonComponent\n                    className={classes.btn}\n                    type='submit'\n                    fullWidth\n                    >\n                     AÑADIR\n                    </ButtonComponent>\n                    </Grid>\n                    \n                </Grid>\n\n            </form>\n        </Fragment>\n    )\n}\n \nexport default FormularioCotizarObraProv;\n\n\n/**\n * \n * \n * \n */","C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\createPdf.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\docdefinition.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\libs\\createTable.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\images\\logo.js",[],"C:\\Users\\OSCAR-GAMER\\Downloads\\repositoriocotizacionespala-master2\\src\\asets\\img\\imagenes.js",["202"],"import LOGO from './LOGOPala.jpg'\r\nimport LOGO2 from './LOGOPala.png'\r\n\r\nexport default {\r\n\r\n    \"imgpng\": LOGO,\r\n    \"imgjpg\": LOGO2\r\n\r\n}",{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":2,"column":9,"nodeType":"209","messageId":"210","endLine":2,"endColumn":15},{"ruleId":"207","severity":1,"message":"211","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":24},{"ruleId":"212","severity":1,"message":"213","line":228,"column":13,"nodeType":"214","endLine":228,"endColumn":63},{"ruleId":"207","severity":1,"message":"215","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":6,"column":22,"nodeType":"209","messageId":"210","endLine":6,"endColumn":28},{"ruleId":"207","severity":1,"message":"216","line":6,"column":68,"nodeType":"209","messageId":"210","endLine":6,"endColumn":72},{"ruleId":"207","severity":1,"message":"217","line":7,"column":22,"nodeType":"209","messageId":"210","endLine":7,"endColumn":29},{"ruleId":"207","severity":1,"message":"218","line":171,"column":26,"nodeType":"209","messageId":"210","endLine":171,"endColumn":46},{"ruleId":"212","severity":1,"message":"213","line":446,"column":13,"nodeType":"214","endLine":446,"endColumn":95},{"ruleId":"212","severity":1,"message":"213","line":8,"column":13,"nodeType":"214","endLine":8,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":30,"column":5,"nodeType":"221","messageId":"222","endLine":30,"endColumn":15},{"ruleId":"219","severity":1,"message":"223","line":31,"column":5,"nodeType":"221","messageId":"222","endLine":31,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":47,"column":13,"nodeType":"221","messageId":"222","endLine":47,"endColumn":23},{"ruleId":"219","severity":1,"message":"223","line":48,"column":13,"nodeType":"221","messageId":"222","endLine":48,"endColumn":22},{"ruleId":"207","severity":1,"message":"224","line":128,"column":19,"nodeType":"209","messageId":"210","endLine":128,"endColumn":30},{"ruleId":"219","severity":1,"message":"220","line":55,"column":9,"nodeType":"221","messageId":"222","endLine":55,"endColumn":19},{"ruleId":"219","severity":1,"message":"223","line":56,"column":9,"nodeType":"221","messageId":"222","endLine":56,"endColumn":18},{"ruleId":"207","severity":1,"message":"225","line":172,"column":21,"nodeType":"209","messageId":"210","endLine":172,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":63,"column":9,"nodeType":"221","messageId":"222","endLine":63,"endColumn":19},{"ruleId":"219","severity":1,"message":"223","line":64,"column":9,"nodeType":"221","messageId":"222","endLine":64,"endColumn":18},{"ruleId":"207","severity":1,"message":"225","line":184,"column":21,"nodeType":"209","messageId":"210","endLine":184,"endColumn":33},{"ruleId":"219","severity":1,"message":"226","line":32,"column":7,"nodeType":"221","messageId":"222","endLine":32,"endColumn":17},{"ruleId":"219","severity":1,"message":"226","line":67,"column":9,"nodeType":"221","messageId":"222","endLine":67,"endColumn":19},{"ruleId":"207","severity":1,"message":"227","line":1,"column":9,"nodeType":"209","messageId":"210","endLine":1,"endColumn":15},{"ruleId":"219","severity":1,"message":"220","line":40,"column":5,"nodeType":"221","messageId":"222","endLine":40,"endColumn":15},{"ruleId":"219","severity":1,"message":"223","line":41,"column":5,"nodeType":"221","messageId":"222","endLine":41,"endColumn":14},{"ruleId":"207","severity":1,"message":"227","line":2,"column":9,"nodeType":"209","messageId":"210","endLine":2,"endColumn":15},{"ruleId":"207","severity":1,"message":"228","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":13},{"ruleId":"229","severity":1,"message":"230","line":4,"column":1,"nodeType":"231","endLine":9,"endColumn":2},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'LockOutlinedIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'guardarLS' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'guardarCantidadCards' is assigned a value but never used.","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected","Duplicate key 'textAlign'.","'guardarRows' is assigned a value but never used.","'resultadoAPI' is assigned a value but never used.","Duplicate key 'transition'.","'Button' is defined but never used.","'Add' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]